version: "3"

services:

  docker-postgres:
    container_name: docker-postgres
    image: postgres:14
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - 5432:${DB_PORT}
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 5
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_USER}@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - docker-postgres
    volumes:
      - pgadmin-volume:/var/lib/pgadmin
  
  rabbitmqServer:
    container_name: rabbitmqServer
    image: rabbitmq:3.10.7-management
    hostname: ${RMQ_HOST}
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    depends_on:
      - docker-postgres
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
      - ./rabbitmq/log/:/var/log/rabbitmq/
    ports:
      - 5672:5672    #amqp
      - 15672:15672  #http
      - 15692:15692  #prometheus
    healthcheck:
      test: rabbitmq-diagnostics -q status && rabbitmq-diagnostics -q check_local_alarms
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres-db-volume:
  pgadmin-volume: